package cyberSecurity;

import java.util.HashMap;
import java.util.Scanner;

public class myTable {
	static HashMap<String, String> letters = new HashMap<String, String>();

	private static String encrypt(String st) {
		String add;
		String val = "";
		for (int i = 0; i < st.length(); i++) {
			for (String j : letters.keySet()) {
				for (int K = 0; K < j.length(); K++) {
					if (st.charAt(i) == j.charAt(K)) {
						add = letters.get(j);
						val = val + add;
					}
				}
			}
		}
		return val;
	}

	public static void main(String[] args) {

		String[][] myTable = {

				{ "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱",
						"😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑" },
				{ "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜",
						"👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀" },
				{ "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍",
						"❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎" },
				{ "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤",
						"😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍" },
				{ "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐",
						"😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘" },
				{ "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞",
						"😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉" },
				{ "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃",
						"😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊" },
				{ "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄",
						"😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂" },
				{ "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩",
						"😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏" },
				{ "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑",
						"😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔" },
				{ "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀",
						"😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕" },
				{ "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎",
						"😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢" },
				{ "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍",
						"😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭" },
				{ "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘",
						"😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇" },
				{ "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉",
						"😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈" },
				{ "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊",
						"😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡" },
				{ "😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂",
						"😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳" },
				{ "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏",
						"😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱" },
				{ "👍", "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔",
						"😕", "😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜" },
				{ "❤", "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕",
						"😢", "😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍" },
				{ "😐", "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢",
						"😭", "😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤" },
				{ "😞", "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭",
						"😇", "😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐" },
				{ "😃", "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇",
						"😈", "😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞" },
				{ "😄", "😩", "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈",
						"😡", "😳", "😱", "😜", "👍", "❤", "😐", "😞", "😃" },
				{ "😑", "😀", "😎", "😍", "😘", "😉", "😊", "😂", "😏", "😔", "😕", "😢", "😭", "😇", "😈", "😡", "😳",
						"😱", "😜", "👍", "❤", "😐", "😞", "😃", "😄", "😩" },

		};
		letters.put("A", "😀");
		letters.put("B", "😎");
		letters.put("C", "😍");
		letters.put("D", "😘");
		letters.put("E", "😉");
		letters.put("F", "😊");
		letters.put("G", "😂");
		letters.put("H", "😏");
		letters.put("I", "😔");
		letters.put("J", "😕");
		letters.put("K", "😢");
		letters.put("L", "😭");
		letters.put("M", "😇");
		letters.put("N", "😈");
		letters.put("O", "😡");
		letters.put("P", "😳");
		letters.put("Q", "😱");
		letters.put("R", "😜");
		letters.put("S", "👍");
		letters.put("T", "❤");
		letters.put("U", "😐");
		letters.put("V", "😞");
		letters.put("W", "😃");
		letters.put("X", "😄");
		letters.put("Y", "😩");
		letters.put("Z", "😑");

		Scanner sc = new Scanner(System.in);
		System.out.println("Input the text:");
		String plain_text = sc.next();
		System.out.println("Input the key:");
		String key = sc.next();
//
//		int qismet = plain_text.length() / key.length();
//
//		int qaliq = plain_text.length() % key.length();
//
//		if (qaliq == 0) {
//			for (int i = 1; i < qismet; i++) {
//				key += key;
//			}
//		} else {
//			for (int i = 1; i < qismet; i++) {
//				key += key;
//			}
//			key += key.substring(0, qaliq);
//		}
		String text = encrypt(plain_text);
		String keys = encrypt(key);
		System.out.println(encrypt(plain_text));
		System.out.println(encrypt(key));
    
		for (int k = 0; k < myTable.length; k++) {
			for (int a = 0; a < myTable.length; a++) {

				if (myTable[0][k].equals(text.substring(0, 2)) && myTable[a][0].equals(keys.substring(0, 2))) {
					System.out.print(myTable[a][k]);

				}
			}
		}

		for (int k = 0; k < myTable.length; k++) {
			for (int a = 0; a < myTable.length; a++) {
				for (int i = 2; i < text.length(); i += 2) {
					if (myTable[0][k].equals(text.substring(i, i + 2))
							&& myTable[a][0].equals(keys.substring(i, i + 2))) {
						System.out.print(myTable[a][k]);

					}
				}
			}
		}

		sc.close();
	}
}
